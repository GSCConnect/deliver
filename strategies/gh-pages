#!/usr/bin/env bash

# Pushes locally generated content to Github Pages.

STRATEGY_VARS="GH_PAGES_DIR"

if [ -z "$GH_PAGES_DIR" ]
then
  export GH_PAGES_DIR="gh-pages"
fi

run() {
  #gitstatus &&
  generate &&
  prepare &&
  push &&
  cleanup
}

# If working directory isn't clean, all changes will be lost if this strategy
# runs all the way to the end. I would be very annoyed if that happened.
#
gitstatus() {
  status "Checking local repository"

  if [ $(git status | grep -c "working directory clean") = 0 ]
  then
    error "
Your working directory is not clean.
Either stash or commit before re-running this command.
I don't want you to lose any uncommitted changes, will stop here.\n"
  fi
}

# If GH_PAGES_EXEC is set, it will run it,
# otherwise it will default to the standard rocco command.
#
generate() {
  status "Generating content for github:pages"

  local git_head="$(git symbolic-ref HEAD)"
  echo "${git_head##*/}" > /tmp/deliver_gh_pages_current_git_branch

  # If GH_PAGES_DIR is not ignored, it won't survive 'git clean -fd'
  if [ $(egrep -c -e "^$GH_PAGES_DIR/*" .gitignore) = 0 ]
  then
    echo "$GH_PAGES_DIR/*" >> .gitignore
    __exec "git commit -a -m 'Ignoring content generated for github:pages'"
  fi

  if [ -n "$GH_PAGES_EXEC" ]
  then
    __exec "$GH_PAGES_EXEC"
  elif [ -n "$ROCCO_FILES" ]
  then
    set -f # disables file globbing
    __exec "bundle exec rocco -o $GH_PAGES_DIR $ROCCO_FILES"
    set +f # enables file globbing

    cd $GH_PAGES_DIR

    __exec "find . -type d -depth 1 | while read dir
    do
      mv $dir/* .
      rm -fr $dir
    done"

    if [ -e "$APP.html" ]
    then
      __exec "mv $APP.html index.html"
    fi
  else
    error "
You must define one of the following:
* GH_PAGES_EXEC - a shell command (can be an executable) which will generate the html files
* ROCCO_FILES - the source files that you want running through rocco\n"
  fi
}

# Ensure that we have gh-pages branch,
# Prep the locally generated content
#
prepare() {
  status "Preparing gh-pages branch"

  __exec "git symbolic-ref HEAD refs/heads/gh-pages"
  __exec "rm .git/index"
  __exec "ls -lah | egrep -v -e \".git|$GH_PAGES_DIR\" | while read resource; do rm -fr \"\$resource\"; done"
  __exec "mv $GH_PAGES_DIR/* ."
  __exec "rm -fr $GH_PAGES_DIR"
}

# Move all files from the generated folder into root folder,
# commit and push
#
push() {
  status "Pushing to github:pages"

  __exec "git add ."
  if [[ ! $(git status) =~ "nothing to commit" ]]; then
    __exec "git commit -a -m 'Generated github:pages via deliver'"
    __exec "git push origin -f gh-pages"
  fi
}

# Clean up after ourselves, switch back to the initial git branch
#
cleanup() {
  status "Cleaning up"

  unset GH_PAGES_DIR
  __exec "git checkout -f $(cat /tmp/deliver_gh_pages_current_git_branch)"
  __exec "rm /tmp/deliver_gh_pages_current_git_branch"
}
